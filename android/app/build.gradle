def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
//    namespace 'com.nfc.shop'

    // compileSdkVersion flutter.compileSdkVersion
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        applicationId "com.nfc.shop"
        minSdkVersion 24 //flutter.minSdkVersion
        targetSdkVersion 33 //flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "6621ace68dffa504fc41e86a", // NOTE: JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }
    signingConfigs {
        forAll {
            storeFile file("${rootDir.absolutePath}/alex.jks")
            storePassword '123456'
            keyAlias 'key0'
            keyPassword '123456'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.forAll
            ndk {
                //选择要添加的对应 cpu 类型的 .so 库。
                //noinspection ChromeOsAbiSupport
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
            }
        }
        profile {
            signingConfig signingConfigs.forAll
        }
        release {
            minifyEnabled false
            shrinkResources false
//            useProguard true
//            shrinkResources true
            signingConfig signingConfigs.forAll
            ndk {
                //选择要添加的对应 cpu 类型的 .so 库
//                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', "armeabi"
                //noinspection ChromeOsAbiSupport,ChromeOsAbiSupport
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lint {
        checkReleaseBuilds false
    }
//    namespace 'com.nfc.shop'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    implementation 'androidx.compose.ui:ui:1.1.1'
//    implementation 'com.android.support:multidex:1.0.3' // 使用fluwx要求写的
}
